[{"F:\\bootcamp\\meet-n-treats\\client\\src\\index.js":"1","F:\\bootcamp\\meet-n-treats\\client\\src\\App.js":"2","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\SinglePost\\SinglePost.js":"3","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\Sidebar.js":"4","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\Nav.js":"5","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\index.js":"6","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\index.js":"7","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\index.js":"8","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\index.js":"9","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\index.js":"10","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\index.js":"11","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\index.js":"12","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\index.js":"13","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\queries.js":"14","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\auth.js":"15","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Comment\\CommentList.js":"16","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\PostCard\\PostCard.js":"17","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\Explore.js":"18","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\PlayDate.js":"19","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\Register.js":"20","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\Search.js":"21","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\Profile.js":"22","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\Create.js":"23","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\Home.js":"24","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\Login.js":"25","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\mutations.js":"26","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Cloudinary\\UploadWidget.js":"27","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\index.js":"28","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\Calendar.js":"29"},{"size":219,"mtime":1675365979949,"results":"30","hashOfConfig":"31"},{"size":1883,"mtime":1675624392041,"results":"32","hashOfConfig":"31"},{"size":1345,"mtime":1675624392046,"results":"33","hashOfConfig":"31"},{"size":464,"mtime":1675624392044,"results":"34","hashOfConfig":"31"},{"size":1675,"mtime":1675624392043,"results":"35","hashOfConfig":"31"},{"size":40,"mtime":1675290413538,"results":"36","hashOfConfig":"31"},{"size":37,"mtime":1675275511163,"results":"37","hashOfConfig":"31"},{"size":38,"mtime":1675291090131,"results":"38","hashOfConfig":"31"},{"size":40,"mtime":1675291090133,"results":"39","hashOfConfig":"31"},{"size":38,"mtime":1675291165651,"results":"40","hashOfConfig":"31"},{"size":41,"mtime":1675275511161,"results":"41","hashOfConfig":"31"},{"size":39,"mtime":1675329814193,"results":"42","hashOfConfig":"31"},{"size":38,"mtime":1675291090134,"results":"43","hashOfConfig":"31"},{"size":1743,"mtime":1675625153071,"results":"44","hashOfConfig":"31"},{"size":1012,"mtime":1675412372824,"results":"45","hashOfConfig":"31"},{"size":540,"mtime":1675624392042,"results":"46","hashOfConfig":"31"},{"size":753,"mtime":1675624392044,"results":"47","hashOfConfig":"31"},{"size":2008,"mtime":1675470611072,"results":"48","hashOfConfig":"31"},{"size":4220,"mtime":1675463829473,"results":"49","hashOfConfig":"31"},{"size":2227,"mtime":1675625793951,"results":"50","hashOfConfig":"31"},{"size":1192,"mtime":1675364928252,"results":"51","hashOfConfig":"31"},{"size":1318,"mtime":1675365130313,"results":"52","hashOfConfig":"31"},{"size":2712,"mtime":1675624392045,"results":"53","hashOfConfig":"31"},{"size":1909,"mtime":1675624392046,"results":"54","hashOfConfig":"31"},{"size":2293,"mtime":1675624392043,"results":"55","hashOfConfig":"31"},{"size":1642,"mtime":1675626054640,"results":"56","hashOfConfig":"31"},{"size":970,"mtime":1675470611047,"results":"57","hashOfConfig":"31"},{"size":40,"mtime":1675412372809,"results":"58","hashOfConfig":"31"},{"size":1433,"mtime":1675462309514,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"y7t9dj",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"F:\\bootcamp\\meet-n-treats\\client\\src\\index.js",[],["129","130"],"F:\\bootcamp\\meet-n-treats\\client\\src\\App.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\SinglePost\\SinglePost.js",["131","132","133"],"import { useQuery } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\";\n\nimport CommentList from \"../../components/Comment/CommentList\";\n// TODO: import CommentForm here when it's made\n\nimport Login from \"../../components/Login\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport { QUERY_SINGLE_POST } from \"../../utils/queries\";\n\nimport PostCard from \"../../components/PostCard/PostCard\";\n\nexport default function SinglePost() {\n  // Retrieve postId from the route:\n  const { postId } = useParams();\n  \n  // Fetch single post data:\n  const { loadingPost, data: postData } = useQuery(QUERY_SINGLE_POST, {\n    variables: { postId: postId },\n  });\n  // NOTE: must be a key-value pair of data: ...\n  console.log('postData: ', postData);\n\n  const post = postData ? postData.post : [];\n  console.log('single post: ', post);\n\n  // Redirect to log in page if not logged in:\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; \n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  if (loadingPost) {\n    return <div>Loading...</div>;\n  }\n  \n  return (\n    <div>\n      SINGLE POST\n      {/* <PostCard postsData={post} /> */}\n      {/* ERROR: Why is 'name' undefined??? it shows up on console when logging post though??? */}\n      {/* TODO: Add CommentList & CommentForm */}\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\Sidebar.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\Nav.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\queries.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\auth.js",["134"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getUser() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n  // This function checks if local storage has the \"auth_token\"\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Comment\\CommentList.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\PostCard\\PostCard.js",["135","136"],"import { Link } from 'react-router-dom';\n\nexport default function PostCard(props) {\n  const { postsData } = props;\n  return (\n    // FRONT-END TODO: Add styling to the div below to look like an Instagram post\n    <div>\n      <h4>{postsData.postAuthor.name}</h4>\n      <p>{postsData.createdAt}</p>\n      {/* Render uploaded image from Cloudinary: */}\n      <img id=\"uploadedimage\" src={postsData.postImageURL} width={500}></img>\n      {/* Render author's name: */}\n      <p><span className='username'>{postsData.postAuthor.name}</span> {postsData.postText}</p>\n      {/* <Link className='' to={`/posts/${postsData._id}`} style={{ textDecoration: 'none' }}>\n        <p className='light-text'>View and leave comments</p>\n      </Link> */}\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\Explore.js",["137"],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nfunction ExplorePage() {\n    const { loading, data } = useQuery(QUERY_ME);\n    const me = data?.me || []; \n    console.log('me: ', me);\n\n    if (me.length === 0) {\n         return (\n        <Login />\n    )\n    }\n\n    return(\n        <div>\n            \n            <h1>Explore</h1>\n            <p>Discover new pets and stay updated on your favorites</p>\n            <h2>Popular Pets</h2>\n            <ul>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 1\" />\n                    <h3>Pet 1</h3>\n                    <p>Pet 1's bio</p>\n                </li>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 2\" />\n                    <h3>Pet 2</h3>\n                    <p>Pet 2's bio</p>\n                </li>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 3\" />\n                    <h3>Pet 3</h3>\n                    <p>Pet 3's bio</p>\n                </li>\n            </ul>\n            <button>See More Popular Pets</button>\n            <h2>Recommend Pets</h2>\n            <ul>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 4\" />\n                    <h3>Pet 4</h3>\n                    <p>Pet 4's bio</p>\n                </li>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 5\" />\n                    <h3>Pet 5</h3>\n                    <p>Pet 5's bio</p>\n                </li>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 6\" />\n                    <h3>Pet 6</h3>\n                    <p>Pet 6's bio</p>\n                </li>\n            </ul>\n            <button>See More Recommended Pets</button>\n        </div>\n    );\n}\n\nexport default ExplorePage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\PlayDate.js",["138","139","140","141","142","143"],"import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport { useMutation } from \"@apollo/client\";\n\nimport Login from \"../../components/Login\";\nimport MyCalendar from \"../../components/Calendar\";\nimport { ADD_PLAYDATE } from \"../../utils/mutations\";\n\nfunction PlayDatePage() {\n    const [pet1, setPet1] = useState(\"\");\n    const [pet2, setPet2] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [activity, setActivity] = useState(\"\");\n    const [selectedDate, setSelectedDate] = useState(\"\");\n    const [playDates, setPlayDates] = useState(\"\");\n    const [showCalendar, setShowCalendar] = useState(false);\n\n    const { loading, data } = useQuery(QUERY_ME);\n    const me = data?.me || []; \n    console.log('me: ', me);\n\n    const [createPlayDate, {data: playDateData, error}] = useMutation(ADD_PLAYDATE);\n\n    if (me.length === 0) {\n        return (\n        <Login />\n    )\n  }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const pet1 = playDateData?.me?.pet;\n        const variables = {\n            pet1: pet1,\n            pet2: pet2,\n            location: location,\n            activity: activity,\n            date: selectedDate\n        };\n        createPlayDate({variables});\n        console.log(`Scheduled play date between ${pet1} and ${pet2} at ${location} for ${activity}`);\n        // setPlayDates([...playDates, newPlayDate]);\n        if (!pet1) return;\n    };\n\n    return (\n        <div>\n            <h1>Schedule a Play Date</h1>\n            <form onSubmit={handleSubmit}>\n                <h2>Pet 2</h2>\n                <input\n                    type=\"text\"\n                    value={pet2}\n                    onChange={(e) => setPet2(e.target.value)}\n                    placeholder=\"Enter pet name or username\"\n                />\n                <h2>Location</h2>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Enter a location\"\n                />\n                <h2>Activity</h2>\n                <input \n                    type=\"text\"\n                    id=\"activity\"\n                    value={activity}\n                    onChange={(e) => setActivity(e.target.value)}\n                    placeholder=\"Enter an activity for a play date\"\n                />\n                {/* <MyCalendar \n                    // onClickDay={onDateClick}\n                    value={new Date()}\n                    style={{\n                      width: \"500px\",\n                      height: \"500px\",\n                      margin: \"0 auto\",\n                      backgroundColor: \"#f2f2f2\",\n                      borderRadius: \"10px\"\n                    }}\n                    selectedDate={selectedDate}\n                    setSelectedDate={setSelectedDate}\n                /> */}\n                <h2>Date</h2>\n                <input \n                    type=\"text\"\n                    id=\"date\"\n                    value={selectedDate ? selectedDate.toDateString() : ''}\n                    onClick={() => setShowCalendar(true)}\n                    // placeholder=\"Click to select a date\"\n                />\n                {showCalendar && \n                  <MyCalendar \n                    value={new Date()}\n                    style={{\n                      width: \"500px\",\n                      height: \"500px\",\n                      margin: \"0 auto\",\n                      backgroundColor: \"#f2f2f2\",\n                      borderRadius: \"10px\"\n                    }}\n                    selectedDate={selectedDate}\n                    setSelectedDate={setSelectedDate}\n                    setShowCalendar={setShowCalendar}\n                    />\n                }\n                <button type=\"submit\">Schedule Play Date</button>\n            </form>\n            {/* <MyCalendar playDates={playDates} \n                style={{\n                    width: \"800px\",\n                    height: \"800px\",\n                    margin: \"0 auto\",\n                }}\n            /> */}\n        </div>\n    );\n}\n\nexport default PlayDatePage;","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\Register.js",["144"],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\Search.js",["145"],"import React, {useState} from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nfunction SearchPage() {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const { loading, data } = useQuery(QUERY_ME);\n    const me = data?.me || []; \n    console.log('me: ', me);\n  \n    if (me.length === 0) {\n      return (\n        <Login />\n      )\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // TODO: Make API call to search for pets or users with the search term\n    };\n\n    return (\n        <div>\n            <h1>Search</h1>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Search by pet name or username\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            <h2>Results</h2>\n            <ul>\n                {/* TODO: Add display search results */}\n            </ul>\n        </div>\n    );\n}\n\nexport default SearchPage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\Profile.js",["146"],"import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_ME } from \"../../utils/queries\";\r\nimport Login from \"../../components/Login\";\r\n\r\nfunction ProfilePage({ currentUser, currentUserPet, posts, updatePetName }) {\r\n  const [petName, setPetName] = useState(currentUserPet);\r\n\r\n  const { loading, data } = useQuery(QUERY_ME);\r\n  const me = data?.me || []; \r\n  console.log('me: ', me);\r\n\r\n  if (me.length === 0) {\r\n    return (\r\n      <Login />\r\n    )\r\n  }\r\n\r\n  const handleUpdatePetName = (e) => {\r\n    e.preventDefault();\r\n    updatePetName(petName);\r\n    console.log(`Pet name updated to: ${petName}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>{currentUser}'s Profile</h1> */}\r\n      {/* <h2>Pet: {currentUserPet}</h2> */}\r\n      <form onSubmit={handleUpdatePetName}>\r\n        <label>\r\n          Change Pet Name:\r\n          <input\r\n            type=\"text\"\r\n            value={petName}\r\n            onChange={(e) => setPetName(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n      <h2>Posts</h2>\r\n      {/* {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <p>{post.content}</p>\r\n          <p>{post.date}</p>\r\n        </div>\r\n      ))} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\Create.js",["147","148"],"import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nimport { QUERY_POSTS } from \"../../utils/queries\";\nimport { ADD_POST } from \"../../utils/mutations\";\nimport CloudinaryUploadWidget from \"../../components/Cloudinary/UploadWidget\"; \n\nimport Auth from '../../utils/auth';\n\nfunction CreatePostPage() {\n  const [postText, setPostText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n  const [postImageURL, setPostImageURL] = useState(\"\");\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      // NOTE: Must QUERY_POSTS somewhere else before reading the cache.\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n        console.log('posts: ', posts);\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  });\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; \n  // console.log('me: ', me);\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  // const handleImageChange = (e) => {\n  //   setPostImage(e.target.files[0]);\n  // };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // logic to create and post the post\n    try {\n      console.log('postImageURL: ', postImageURL);\n      const { data } = await addPost({\n        variables: {\n          postText,\n          postImageURL,\n          postAuthor: Auth.getUser().data._id,\n        },\n      });\n      \n      setPostText('');\n      window.location.replace('/');\n    } catch (error) {\n      console.error('>>> handleSubmit error: ', error);\n    }\n    setPostText(\"\");\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'postText' && value.length <= 280) {\n      setPostText(value);\n      setCharacterCount(value.length);\n    }\n  }\n\n  return (\n    <div>\n      <h2>Create a Post</h2>\n      <p\n        className={`m-0 ${\n          characterCount === 280 || error ? 'text-danger' : ''\n        }`}\n      >\n        Character Count: {characterCount}/280\n      </p>\n      <form onSubmit={handleSubmit}>\n        <CloudinaryUploadWidget setPostImageURL={setPostImageURL} />\n        <br />\n        <textarea\n          name=\"postText\"\n          placeholder=\"Enter post text\"\n          value={postText}\n          onChange={handleInputChange}\n        />\n        <br />\n        <button type=\"submit\">Post</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePostPage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\Home.js",["149","150"],"import { useQuery } from \"@apollo/client\";\nimport Login from \"../../components/Login\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\n\nimport { Link } from \"react-router-dom\";\n\nimport PostCard from \"../../components/PostCard/PostCard\";\n\nfunction Home() {\n  const { loadingPosts, data: postsData } = useQuery(QUERY_POSTS);\n  // NOTE: must be a key-value pair of data: ...\n  console.log('postsData: ', postsData);\n  // console.log(postsData.posts.)\n\n  // Get posts from query:\n  var posts = postsData ? postsData.posts : [];\n  console.log('posts: ', posts);\n  if (posts.length > 0) {\n    console.log(posts[0].timestamp);\n    const parsedTimestamp = parseInt(posts[0].timestamp);\n    console.log('parsed timestamp: ', parsedTimestamp);\n    // console.log(typeof(posts[0].createdAt)); // \"Feb 3rd, 2023 at 10:51 am\"\n    console.log(new Date(parsedTimestamp));\n    console.log('altogether :', new Date(parseInt(posts[0].timestamp)));\n\n    // // Sort posts by most recent:\n    // posts.sort(function(a, b) {\n    //   return new Date(parseInt(b.timestamp)) - new Date(parseInt(a.timestamp));\n    // });\n    // console.log(posts);\n  }\n\n  console.log('posts: ', posts);\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; // *QUESTION: Why set to empty array instead of empty object? To avoid null or undefined references\n  // console.log('me: ', me);\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <div>\n      {posts && \n        posts.map((post) => (\n          <div key={post._id}>\n            <PostCard \n              postsData={post}\n            />\n            <Link className='' to={`/posts/${postsData._id}`} style={{ textDecoration: 'none' }}>\n              <p className='light-text'>View and leave comments</p>\n            </Link>\n          </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\Login.js",["151"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport { Link } from 'react-router-dom';\n\nimport Auth from \"../../utils/auth.js\";\nimport image from '../../assets/background.png';\n\n\nfunction Login() {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (     \n      <div className=\"app-login_page\">\n            <hr className=\"lin\"></hr>\n            <div className=\"app-login_page__container\" style={{backgroundImage: `url(${image})`,\n              backgroundSize: \"cover\",\n              backgroundRepeat: \"no-repeat\",\n              height: \"70vh\",\n              width: \"98vw\",\n              opacity: \"0.9\",\n            }}> \n              <h1>Sign In</h1>\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  type=\"email\"\n                  placeholder=\"Your Email\"\n                  name=\"email\"\n                  value={formState.email}\n                  onChange={handleInputChange}\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"********\"\n                  name=\"password\"\n                  value={formState.password}\n                  onChange={handleInputChange}\n                />\n                <button id=\"loginBtn\" className=\"login\" type=\"submit\">Login</button>\n              </form>\n              <h4>\n                Don't have an account? \n                <Link className=\"text-dark no-underline\" to=\"/register\" style={{ textDecoration: 'none' }}> Sign up</Link>\n              </h4>\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n\n\n        </div>\n  );\n}\n\nexport default Login;\n","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\mutations.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Cloudinary\\UploadWidget.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\Calendar.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":19},{"ruleId":"156","severity":1,"message":"160","line":12,"column":8,"nodeType":"158","messageId":"159","endLine":12,"endColumn":16},{"ruleId":"156","severity":1,"message":"161","line":29,"column":11,"nodeType":"158","messageId":"159","endLine":29,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":41,"column":1,"nodeType":"164","endLine":41,"endColumn":34},{"ruleId":"156","severity":1,"message":"165","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":11,"column":7,"nodeType":"168","endLine":11,"endColumn":72},{"ruleId":"156","severity":1,"message":"161","line":7,"column":13,"nodeType":"158","messageId":"159","endLine":7,"endColumn":20},{"ruleId":"156","severity":1,"message":"169","line":11,"column":12,"nodeType":"158","messageId":"159","endLine":11,"endColumn":16},{"ruleId":"156","severity":1,"message":"170","line":11,"column":18,"nodeType":"158","messageId":"159","endLine":11,"endColumn":25},{"ruleId":"156","severity":1,"message":"171","line":16,"column":12,"nodeType":"158","messageId":"159","endLine":16,"endColumn":21},{"ruleId":"156","severity":1,"message":"172","line":16,"column":23,"nodeType":"158","messageId":"159","endLine":16,"endColumn":35},{"ruleId":"156","severity":1,"message":"161","line":19,"column":13,"nodeType":"158","messageId":"159","endLine":19,"endColumn":20},{"ruleId":"156","severity":1,"message":"173","line":23,"column":49,"nodeType":"158","messageId":"159","endLine":23,"endColumn":54},{"ruleId":"156","severity":1,"message":"174","line":17,"column":29,"nodeType":"158","messageId":"159","endLine":17,"endColumn":33},{"ruleId":"156","severity":1,"message":"161","line":9,"column":13,"nodeType":"158","messageId":"159","endLine":9,"endColumn":20},{"ruleId":"156","severity":1,"message":"161","line":9,"column":11,"nodeType":"158","messageId":"159","endLine":9,"endColumn":18},{"ruleId":"156","severity":1,"message":"161","line":33,"column":11,"nodeType":"158","messageId":"159","endLine":33,"endColumn":18},{"ruleId":"156","severity":1,"message":"174","line":52,"column":15,"nodeType":"158","messageId":"159","endLine":52,"endColumn":19},{"ruleId":"156","severity":1,"message":"175","line":12,"column":11,"nodeType":"158","messageId":"159","endLine":12,"endColumn":23},{"ruleId":"156","severity":1,"message":"161","line":37,"column":11,"nodeType":"158","messageId":"159","endLine":37,"endColumn":18},{"ruleId":"156","severity":1,"message":"174","line":16,"column":26,"nodeType":"158","messageId":"159","endLine":16,"endColumn":30},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'CommentList' is defined but never used.","Identifier","unusedVar","'PostCard' is defined but never used.","'loading' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pet1' is assigned a value but never used.","'setPet1' is assigned a value but never used.","'playDates' is assigned a value but never used.","'setPlayDates' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'loadingPosts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]