[{"F:\\bootcamp\\meet-n-treats\\client\\src\\index.js":"1","F:\\bootcamp\\meet-n-treats\\client\\src\\App.js":"2","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\MainApp\\MainApp.js":"3","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\queries.js":"4","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\SinglePost\\SinglePost.js":"5","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\AddPetForm\\AddPetForm.js":"6","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\index.js":"7","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\index.js":"8","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\index.js":"9","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\index.js":"10","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\index.js":"11","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\index.js":"12","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\index.js":"13","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\index.js":"14","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\index.js":"15","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\index.js":"16","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\auth.js":"17","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\mutations.js":"18","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\CommentList\\CommentList.js":"19","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\PostCard\\PostCard.js":"20","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\CommentForm\\CommentForm.js":"21","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\Register.js":"22","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\Nav.js":"23","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\Search.js":"24","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\Login.js":"25","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\Sidebar.js":"26","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\Home.js":"27","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\Explore.js":"28","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\Create.js":"29","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\Profile.js":"30","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\PlayDate.js":"31","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Cloudinary\\UploadWidget.js":"32","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\index.js":"33","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\Calendar.js":"34","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Market\\index.js":"35","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Market\\MarketHome.js":"36","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\MarketBuy\\index.js":"37","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\MarketSell\\index.js":"38","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\MarketBuy\\MarketBuy.js":"39","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\MarketSell\\MarketSell.js":"40"},{"size":219,"mtime":1675628578822,"results":"41","hashOfConfig":"42"},{"size":727,"mtime":1675706312851,"results":"43","hashOfConfig":"42"},{"size":2175,"mtime":1675707027584,"results":"44","hashOfConfig":"42"},{"size":2268,"mtime":1675707445101,"results":"45","hashOfConfig":"42"},{"size":1526,"mtime":1675706312921,"results":"46","hashOfConfig":"42"},{"size":3703,"mtime":1675706312900,"results":"47","hashOfConfig":"42"},{"size":39,"mtime":1675628578821,"results":"48","hashOfConfig":"42"},{"size":41,"mtime":1675628578821,"results":"49","hashOfConfig":"42"},{"size":38,"mtime":1675628578817,"results":"50","hashOfConfig":"42"},{"size":35,"mtime":1675628578818,"results":"51","hashOfConfig":"42"},{"size":38,"mtime":1675628578823,"results":"52","hashOfConfig":"42"},{"size":39,"mtime":1675628578825,"results":"53","hashOfConfig":"42"},{"size":40,"mtime":1675628578823,"results":"54","hashOfConfig":"42"},{"size":37,"mtime":1675628578824,"results":"55","hashOfConfig":"42"},{"size":40,"mtime":1675628578825,"results":"56","hashOfConfig":"42"},{"size":38,"mtime":1675628578826,"results":"57","hashOfConfig":"42"},{"size":1012,"mtime":1675683520917,"results":"58","hashOfConfig":"42"},{"size":2910,"mtime":1675707161006,"results":"59","hashOfConfig":"42"},{"size":664,"mtime":1675706312868,"results":"60","hashOfConfig":"42"},{"size":826,"mtime":1675706312887,"results":"61","hashOfConfig":"42"},{"size":2722,"mtime":1675706312860,"results":"62","hashOfConfig":"42"},{"size":1824,"mtime":1675706312888,"results":"63","hashOfConfig":"42"},{"size":1863,"mtime":1675706312883,"results":"64","hashOfConfig":"42"},{"size":1209,"mtime":1675706509814,"results":"65","hashOfConfig":"42"},{"size":2327,"mtime":1675706312872,"results":"66","hashOfConfig":"42"},{"size":519,"mtime":1675706312892,"results":"67","hashOfConfig":"42"},{"size":1205,"mtime":1675706312909,"results":"68","hashOfConfig":"42"},{"size":2721,"mtime":1675706312905,"results":"69","hashOfConfig":"42"},{"size":2834,"mtime":1675706312901,"results":"70","hashOfConfig":"42"},{"size":5389,"mtime":1675706312917,"results":"71","hashOfConfig":"42"},{"size":3132,"mtime":1675706312913,"results":"72","hashOfConfig":"42"},{"size":970,"mtime":1675683520900,"results":"73","hashOfConfig":"42"},{"size":40,"mtime":1675683520899,"results":"74","hashOfConfig":"42"},{"size":1433,"mtime":1675683520899,"results":"75","hashOfConfig":"42"},{"size":44,"mtime":1675706784598,"results":"76","hashOfConfig":"42"},{"size":1035,"mtime":1675706764878,"results":"77","hashOfConfig":"42"},{"size":43,"mtime":1675706849431,"results":"78","hashOfConfig":"42"},{"size":44,"mtime":1675706899329,"results":"79","hashOfConfig":"42"},{"size":4325,"mtime":1675707412854,"results":"80","hashOfConfig":"42"},{"size":3735,"mtime":1675707211562,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"y7t9dj",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"84"},"F:\\bootcamp\\meet-n-treats\\client\\src\\index.js",[],["180","181"],"F:\\bootcamp\\meet-n-treats\\client\\src\\App.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\MainApp\\MainApp.js",["182"],"import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\n\nimport Home from \"../../pages/Home\";\nimport AddPetForm from \"../../pages/AddPetForm/AddPetForm\";\nimport Create from \"../../pages/Create\";\nimport PlayDate from \"../../pages/PlayDate\";\nimport Profile from \"../../pages/Profile\";\nimport Search from \"../../pages/Search\";\nimport Explore from \"../../pages/Explore\";\nimport SinglePost from \"../../pages/SinglePost/SinglePost\";\nimport Market from \"../../pages/Market\";\nimport MarketSell from \"../../pages/MarketSell\";\nimport MarketBuy from \"../../pages/MarketBuy\";\n\nimport Login from \"../Login\";\nimport Register from \"../Register\";\nimport Sidebar from \"../Sidebar\";\nimport Nav from \"../Nav\";\n\nexport default function MainApp() {\n  const { loadingPosts, data: postsData } = useQuery(QUERY_POSTS);\n  // const { loadingComments, data: commentsData } = useQuery()\n  console.log('>>> logging postsData: ', postsData);\n\n  // Get posts from query:\n  var posts = postsData ? postsData.posts : [];\n  console.log('posts: ', posts);\n  \n  return (\n    <Router>\n      <div className=\"main\">\n        <navi>\n          <Sidebar>\n            <Nav></Nav>\n          </Sidebar>\n        </navi>\n        <Routes>\n          <Route path=\"/\" element={<Home posts={posts} />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/add-pet\" element={<AddPetForm />} />\n          <Route path=\"/create\" element={<Create />} />\n          <Route path=\"/explore\" element={<Explore />} />\n          <Route path=\"/playdates\" element={<PlayDate />} />\n          <Route path=\"/profiles\" element={<Profile posts={posts} />} />\n          <Route path=\"/search\" element={<Search />} />\n          <Route path=\"/marketplace\" element={<Market />} />\n          <Route path=\"/marketplace/buy\" element={<MarketBuy />} />\n          <Route path=\"/marketplace/sell\" element={<MarketSell />} />\n          <Route path=\"/posts/:postId\" element={<SinglePost posts={posts} />} />\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\queries.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\SinglePost\\SinglePost.js",["183"],"import { useQuery } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\";\n\nimport CommentList from \"../../components/CommentList/CommentList\";\nimport CommentForm from \"../../components/CommentForm/CommentForm\";\n\nimport Login from \"../../components/Login\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\n\nimport PostCard from \"../../components/PostCard/PostCard\";\n\nexport default function SinglePost(props) {\n  console.log('Starting SinglePost()...');\n\n  // Retrieve postId from the route:\n  const { postId } = useParams();\n  \n  const { posts } = props;\n  console.log('>>> logging posts: ', posts);\n\n  const post = posts.find(post => post._id === postId);\n  console.log('>>> logging post: ', post);\n\n  // Redirect to log in page if not logged in:\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; \n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  // if (loadingPost) {\n  //   return <div>Loading...</div>;\n  // }\n  \n  return (\n    <div className=\"flex-column align-center mx-auto py-5\">\n      <div className='app-postcard_page_single flex-row mt-5 mb-6 px-3 pt-5'>\n        <PostCard postsData={post} />\n        <div className=\"mx-5 flex-column mt-6 mb-5\">\n          <h2>💭 Join the Discussion 💭</h2>\n          <CommentList comments={post.comments} />\n          <br></br>\n          <CommentForm postId={postId} />\n        </div>\n        <div className=\"visibility-hidden\">\n          <CommentForm postId={postId} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\AddPetForm\\AddPetForm.js",["184","185"],"import { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_PET } from \"../../utils/mutations\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nimport Auth from '../../utils/auth';\n\nexport default function AddPetForm() {\n  const [formState, setFormState] = useState({\n    petOwner: Auth.getUser().data._id,\n    petName: \"\",\n    petAge: \"\",\n    petType: \"\",\n    petBreed: \"\",\n    petFavFood: \"\",\n    petFavActivities: \"\",\n    petBio: \"\",\n  });\n\n  const [addPet, { error, data }] = useMutation(ADD_PET);\n  \n  const handleInputChange = ({ target: { name, value } }) => {\n    console.log(name, value);\n    setFormState({ ...formState, [name]: value });\n  };\n\n  // Authenticate user:\n  const { loading, data: meData } = useQuery(QUERY_ME);\n  const me = meData?.me || []; \n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addPet({\n        variables: { ...formState }\n      });\n      console.log(data);\n      setFormState('');\n      window.location.replace('/');\n\n    } catch (error) {\n      console.error('>>> handleSubmit error: ', error);\n    }\n  };\n\n  return (\n    <div className=\"pet-form-card flex-column align-center\">\n      <h2 className=\"text-center\">🐾 Add Your Pet 🐾</h2>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's name*\"\n          name=\"petName\"\n          value={formState.petName}\n          onChange={handleInputChange}\n        />\n        <label>\n          <h6>Select type of animal for your pet*:</h6>\n          <select name=\"petType\" value={formState.petType} onChange={handleInputChange}>\n            <option value=\"default\">Select</option>\n            <option value=\"🐶 Doggo\">🐶 Doggo</option>\n            <option value=\"🐱 Catto\">🐱 Catto</option>\n            <option value=\"🐰 Bunny\">🐰 Bunny</option>\n            <option value=\"🐹 Hamster/Guinea Pig/Mouse/Chinchilla\">🐹 Hamster/Guinea Pig/Mouse/Chinchilla</option>\n            <option value=\"🐦 Birdy\">🐦 Birdy</option>\n            <option value=\"🐢 Reptile Fam\">🐢 Reptile Fam</option>\n            <option value=\"🐠 Aquatics\">🐠 Aquatics</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's age (optional)\"\n          name=\"petAge\"\n          value={formState.petAge}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's breed (optional)\"\n          name=\"petBreed\"\n          value={formState.petBreed}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's favorite food (optional)\"\n          name=\"petFavFood\"\n          value={formState.petFavFood}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's favorite activities (optional)\"\n          name=\"petFavActivities\"\n          value={formState.petFavActivities}\n          onChange={handleInputChange}\n        />\n        <textarea\n          placeholder=\"Type a short bio for your pet here... (optional)\"\n          name=\"petBio\"\n          value={formState.petBio}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className=\"btn btn-info\">Submit</button>\n      </form>\n      {error && (\n        <div className=\"text-danger\">\n          Invalid input\n        </div>\n      )}\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\auth.js",["186"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getUser() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n  // This function checks if local storage has the \"auth_token\"\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\mutations.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\CommentList\\CommentList.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\PostCard\\PostCard.js",["187","188"],"import { Link } from 'react-router-dom';\n\nexport default function PostCard(props) {\n  const { postsData } = props;\n  return (\n    <div className=''>\n      <div className='app-postcard_data-author'>\n        <div className='app-postcard_data-author-avatar'>\n          <img src={'https://res.cloudinary.com/dnwrm14k9/image/upload/v1675571532/avatar_if5map.png'} alt='avatar' />\n        </div>\n        <h4>{postsData.postAuthor.name}</h4>\n      </div>\n      <p>{postsData.createdAt}</p>\n      {/* Render uploaded image from Cloudinary: */}\n      <div className='app-postcard_data-image'>\n        <img id=\"uploadedimage\" src={postsData.postImageURL} width={500}></img>\n      </div>\n      {/* Render author's name: */}\n      <p><span className='username'>{postsData.postAuthor.name}</span> {postsData.postText}</p>\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\CommentForm\\CommentForm.js",["189","190","191","192"],"import { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_COMMENT } from \"../../utils/mutations\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nimport Auth from '../../utils/auth';\n\nexport default function CommentForm(props) {\n  const { postId } = props;\n\n  const [formState, setFormState] = useState({\n    postId: postId,\n    commentAuthor: Auth.getUser().data.name,\n    commentText: \"\",\n  });\n\n  const [addComment, { error, data }] = useMutation(ADD_COMMENT, {\n    // Get comments from postsData stored in the browser cache\n    update(cache, { data: { addComment } }) {\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n        console.log('>>> logging posts with comments: ', posts);\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addComment, ...posts] },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  });\n\n  // Authenticate user:\n  const { loading, data: meData } = useQuery(QUERY_ME);\n  const me = meData?.me || []; \n  // console.log('me: ', me);\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  };\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    console.log(name, value);\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addComment({\n        variables: { ...formState }\n      });\n      console.log(data);\n      setFormState({\n        postId: postId,\n        commentAuthor: Auth.getUser().data.name,\n        commentText: \"\",\n      });\n\n    } catch (error) {\n      console.error('>>> handleSubmit error: ', error);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit} className=\"display-inline\">\n        <div className=\"display-inline\">\n          <input\n            type=\"text\"\n            placeholder=\"Add a comment...\"\n            name=\"commentText\"\n            value={formState.commentText}\n            onChange={handleInputChange}\n            style={{ border: 'none' }}\n            className=\"negative-left-margin no-border text-lg light-background\"\n          />\n        </div>\n        <div className=\"display-inline\">\n          <button \n            type=\"submit\" \n            className=\"btn btn-xsm btn-comment\"\n          >\n            <img \n              src=\"https://res.cloudinary.com/dnwrm14k9/image/upload/v1675658604/send-4008_kgqwyo.png\" \n              width=\"20px\"\n            ></img>\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\Register.js",["193"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register() {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  // const [registerError, setRegisterError] = useState('');\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.register.token);\n    } catch (error) {\n      // setRegisterError(error);\n      console.error(error);\n    }\n  };\n  return (\n    <div className=\"signup-form-card flex-column align-center\">\n      <h2>Sign Up</h2>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Your username*\"\n          name=\"name\"\n          value={formState.name}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Your email*\"\n          name=\"email\"\n          value={formState.email}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"******\"\n          name=\"password\"\n          value={formState.password}\n          onChange={handleInputChange}\n        />        \n        <button type=\"submit\" className=\"btn btn-info signup-btn\">Sign up</button>\n      </form>\n      {error && (\n        <div className=\"text-danger\">\n          Invalid credentials\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Register;\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\Nav.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\Search.js",["194"],"import React, {useState} from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nfunction SearchPage() {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const { loading, data } = useQuery(QUERY_ME);\n    const me = data?.me || []; \n    console.log('me: ', me);\n  \n    if (me.length === 0) {\n      return (\n        <Login />\n      )\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // TODO: Make API call to search for pets or users with the search term\n    };\n\n    return (\n        <div className=\"page\">\n            <h1>Search</h1>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Search by pet name or username\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            <h2>Results</h2>\n            <ul>\n                {/* TODO: Add display search results */}\n            </ul>\n        </div>\n    );\n}\n\nexport default SearchPage;","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\Login.js",["195"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport { Link } from 'react-router-dom';\n\nimport Auth from \"../../utils/auth.js\";\nimport image from '../../assets/background.png';\n\n\nfunction Login() {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (     \n      <div className=\"login-form-card flex-column align-center\">\n            <div className=\"flex-column align-center\" style={{backgroundImage: `url(${image})`,\n              backgroundSize: \"cover\",\n              backgroundRepeat: \"no-repeat\",\n              height: \"100vh\",\n              width: \"65vw\",\n              opacity: \"0.9\",\n            }}>\n              <div className=\"mt-7\">\n                <h1>Log In</h1>\n              </div> \n              <form onSubmit={handleFormSubmit}>\n                <input\n                  type=\"email\"\n                  placeholder=\"Your Email\"\n                  name=\"email\"\n                  value={formState.email}\n                  onChange={handleInputChange}\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"********\"\n                  name=\"password\"\n                  value={formState.password}\n                  onChange={handleInputChange}\n                />\n                <button className=\"btn btn-block btn-primary text-dark login\" type=\"submit\">Login</button>\n              </form>\n              <h4>\n                Don't have an account? \n                <Link className=\"text-link no-underline\" to=\"/register\"> Sign up</Link>\n              </h4>\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n\n\n        </div>\n  );\n}\n\nexport default Login;\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\Sidebar.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\Home.js",["196","197"],"import { useQuery } from \"@apollo/client\";\nimport Login from \"../../components/Login\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\n\nimport { Link } from \"react-router-dom\";\n\nimport PostCard from \"../../components/PostCard/PostCard\";\n\nfunction Home(props) {\n  const { posts } = props;\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; // *QUESTION: Why set to empty array instead of empty object? To avoid null or undefined references\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <div className=\"flex-column align-center\">\n      {posts && \n        posts.map((post) => (\n          <div key={post._id} className='app-postcard_page ml-7 my-5 px-6 py-5'>\n            <PostCard \n              postsData={post}\n            />\n            <Link className='' to={`/posts/${post._id}`} style={{ textDecoration: 'none' }}>\n              <p className='light-text'>View post and leave comments</p>\n            </Link>\n          </div>\n      ) || (\n        <div>\n          <h2>No posts yet. Add your own post with \"📝 Create\"!</h2>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\Explore.js",["198"],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nfunction ExplorePage() {\n    const { loading, data } = useQuery(QUERY_ME);\n    const me = data?.me || []; \n    console.log('me: ', me);\n\n    if (me.length === 0) {\n      return (\n        <Login />\n      )\n    }\n\n    return(\n      <div className=\"page explore\">\n            <div className=\"mb-1\">\n                <p>Discover new pets and stay updated on your favorites</p>\n            </div>\n            <div className=\"exSection\">\n                <h2>Popular Pets</h2>\n                <ul>\n                    <li>\n                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/9/90/Labrador_Retriever_portrait.jpg\" alt=\"Pet 1\" />\n                        <h3>Lucky</h3>\n                        <p>Loves to play fetch and nap</p>\n                    </li>\n                    <li>\n                        <img src=\"https://www.readersdigest.ca/wp-content/uploads/2013/02/beagle-most-popular-dog-breeds.jpg\" alt=\"Pet 2\" />\n                        <h3>Brodie</h3>\n                        <p>Enjoys long walks</p>\n                    </li>\n                    <li>\n                        <img src=\"https://bestlifeonline.com/wp-content/uploads/sites/3/2019/03/shiba-inu.jpg?resize=500,333&quality=82&strip=all\" alt=\"Pet 3\" />\n                        <h3>Spike</h3>\n                        <p>Loves to cuddle</p>\n                    </li>\n                </ul>\n                {/* <button>See More Popular Pets</button> */}\n            </div>\n            <div className=\"exSection\">\n                <h2>Recommend Pets</h2>\n                <ul>\n                    <li>\n                        <img src=\"https://pyxis.nymag.com/v1/imgs/6a9/2a3/6c37ee37a2473f12b6dc4a703a50381993-09-clifford.jpg\" alt=\"Pet 4\" />\n                        <h3>Clifford</h3>\n                        <p>The big red dog</p>\n                    </li>\n                    <li>\n                        <img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/b/bc/Garfield_the_Cat.svg/800px-Garfield_the_Cat.svg.png\" alt=\"Pet 5\" />\n                        <h3>Garfield</h3>\n                        <p>Loves lasagna</p>\n                    </li>\n                    <li>\n                        <img src=\"https://upload.wikimedia.org/wikipedia/en/f/f6/Tom_Tom_and_Jerry.png\" alt=\"Pet 6\" />\n                        <h3>Tom</h3>\n                        <p>Excellent at catching mouse</p>\n                    </li>\n                </ul>\n                {/* <button>See More Recommended Pets</button> */}\n            </div>\n        </div>\n    );\n}\n\nexport default ExplorePage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\Create.js",["199","200"],"import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nimport { QUERY_POSTS } from \"../../utils/queries\";\nimport { ADD_POST } from \"../../utils/mutations\";\nimport CloudinaryUploadWidget from \"../../components/Cloudinary/UploadWidget\"; \n\nimport Auth from '../../utils/auth';\n\nfunction CreatePostPage() {\n  const [postText, setPostText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n  const [postImageURL, setPostImageURL] = useState(\"\");\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      // NOTE: Must QUERY_POSTS somewhere else before reading the cache.\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n        console.log('posts: ', posts);\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  });\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; \n  // console.log('me: ', me);\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  // const handleImageChange = (e) => {\n  //   setPostImage(e.target.files[0]);\n  // };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      console.log('postImageURL: ', postImageURL);\n      const { data } = await addPost({\n        variables: {\n          postText,\n          postImageURL,\n          postAuthor: Auth.getUser().data._id,\n        },\n      });\n      \n      setPostText('');\n      window.location.replace('/');\n    } catch (error) {\n      console.error('>>> handleSubmit error: ', error);\n    }\n    setPostText(\"\");\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'postText' && value.length <= 280) {\n      setPostText(value);\n      setCharacterCount(value.length);\n    }\n  }\n\n  return (\n    <div className=\"app-postcard_page page create-form-card flex-column align-start\">\n      <div className=\"text-center mb-5\">\n        <h2>📝 Create a Post</h2>\n      </div>\n      <p\n        className={`m-0 ${\n          characterCount === 280 || error ? 'text-danger' : ''\n        }`}\n      >\n        Character Count: {characterCount}/280\n      </p>\n      <form onSubmit={handleSubmit}>\n        <CloudinaryUploadWidget setPostImageURL={setPostImageURL} />\n        <br />\n        <textarea\n          name=\"postText\"\n          placeholder=\"Enter post text\"\n          value={postText}\n          onChange={handleInputChange}\n        />\n        <br />\n        <button className=\"btn btn-info\" type=\"submit\">Post</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePostPage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\Profile.js",["201","202","203"],"import { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport { QUERY_PET } from \"../../utils/queries\";\nimport { QUERY_USER } from \"../../utils/queries\";\n// import mongoose from 'mongoose';\n\nimport Login from \"../../components/Login\";\n// import EditPet\nimport PostCard from \"../../components/PostCard/PostCard\";\n\nimport Auth from '../../utils/auth';\nimport { Link } from \"react-router-dom\";\n\nfunction ProfilePage(props) {\n  const { posts } = props;\n  console.log('>>> logging posts: ', posts);\n\n  const userPosts = posts.filter(\n    post => post.postAuthor._id === Auth.getUser().data._id\n  );\n  console.log('>>> logging userPosts: ', userPosts);\n\n  const post = userPosts[0];\n  console.log(post);\n  // console.log(post.postAuthor.name);\n\n  // Get user info with petId:\n  // const { loadingUser, userData } = useQuery(QUERY_USER, {\n  //   // pass URL parameter\n  //   variables: { userId: new Types.ObjectId('578df3efb618f5141202a196') },\n  // });\n\n  // const user = userData ? userData.user : [];\n  // console.log(user);\n  // console.log('auth...: ', Auth.getUser().data._id)\n  // console.log(typeof(Auth.getUser().data._id))\n\n  // Get pet info:\n  // const { loadingPet, petData } = useQuery(QUERY_PET, {\n  //   // pass petId from userPosts[0].postAuthor.pet._id\n  //   variables: { petId: \"63e04e28e660608f2b2eda05\" },\n  // });\n\n  // console.log(userPosts[0].postAuthor.pet._id);\n  // console.log(typeof(userPosts[0].postAuthor.pet._id))\n  // console.log(petData);\n  // const pet = petData ? petData.pet : [];\n  // console.log(pet);\n\n  // Authenticate user:\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; \n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  };\n\n  return (\n    <div className=\"flex-column page negative-top-margin\">\n      <div className=\"text-primary\">\n        <h1>✨ Welcome, <span className=\"text-pink\">{me.name} ✨</span></h1>\n      </div>\n      {/* <div className=\"text-left\">\n        <h2>🪪 Your Pet Profile</h2>\n      </div>\n      <div className=\"pet-info-card mt-5 flex-column\">\n        {post.postAuthor.pet.petName ? (\n          <div className=\"flex-row mb-2\">\n            <h4 className=\"text-info-field text-info\">Name: </h4>\n            <span className=\"ml-5\">\n              <h4>{post.postAuthor.pet.petName}</h4>\n            </span>\n          </div>\n        ) : (\n          <div className=\"display-none\"></div>\n        )}\n        {post.postAuthor.pet.petAge ? (\n          <div className=\"flex-row mb-2\">\n            <h4 className=\"text-info-field text-info\">Age: </h4>\n            <span className=\"ml-5\">\n              <h4>{post.postAuthor.pet.petAge}</h4>\n            </span>\n          </div>\n        ) : (\n          <div className=\"display-none\"></div>\n        )}\n        {post.postAuthor.pet.petType ? (\n          <div className=\"flex-row mb-2\">\n            <h4 className=\"text-info-field text-info\">Type: </h4>\n            <span className=\"ml-5\">\n              <h4>{post.postAuthor.pet.petType}</h4>\n            </span>\n          </div>\n        ) : (\n          <div className=\"display-none\"></div>\n        )}\n        {post.postAuthor.pet.petBreed ? (\n          <div className=\"flex-row mb-2\">\n            <h4 className=\"text-info-field text-info\">Breed: </h4>\n            <span className=\"ml-5\">\n              <h4>{post.postAuthor.pet.petBreed}</h4>\n            </span>\n          </div>\n        ) : (\n          <div className=\"display-none\"></div>\n        )}\n        {post.postAuthor.pet.petFavFood ? (\n          <div className=\"flex-row mb-2\">\n            <h4 className=\"text-info-field text-info\">FavFood: </h4>\n            <span className=\"ml-5\">\n              <h4>{post.postAuthor.pet.petFavFood}</h4>\n            </span>\n          </div>\n        ) : (\n          <div className=\"display-none\"></div>\n        )}\n        {post.postAuthor.pet.petFavActivities ? (\n          <div className=\"flex-row mb-2\">\n            <h4 className=\"text-info-field text-info\">FavActivities: </h4>\n            <span className=\"ml-5\">\n              <h4>{post.postAuthor.pet.petFavActivities}</h4>\n            </span>\n          </div>\n        ) : (\n          <div className=\"display-none\"></div>\n        )}\n        {post.postAuthor.pet.petBio ? (\n          <div className=\"flex-row\">\n            <h4 className=\"text-info-field text-info\">Bio: </h4>\n            <span className=\"ml-5\">\n              <h4>{post.postAuthor.pet.petBio}</h4>\n            </span>\n          </div>\n        ) : (\n          <div className=\"display-none\"></div>\n        )}\n      \n      </div> */}\n      <div className=\"text-left mt-5\">\n        <h2>🖼️ Your Posts</h2>\n      </div>\n      {userPosts.length > 0 ? userPosts.map((post) => (\n        <div className=\"row\">\n          <div key={post._id} className='app-postcard_page ml-2 my-5 px-6 py-5'>\n            <PostCard \n              postsData={post}\n            />\n            <Link className='' to={`/posts/${post._id}`} style={{ textDecoration: 'none' }}>\n              <p className='light-text'>View post and leave comments</p>\n            </Link>\n          </div>\n        </div>\n      )) : (\n        <div>\n         <p>No post yet. Create your first post <a href=\"/create\" className=\"no-underline text-link\">here</a>!</p>\n        </div>\n      )}\n      {/* <h2>Welcome, <span>{posts.postAuthor.name}</span></h2> */}\n    </div>\n  );\n}\n\nexport default ProfilePage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\PlayDate.js",["204","205","206"],"import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nimport Login from \"../../components/Login\";\nimport MyCalendar from \"../../components/Calendar\";\n\nfunction PlayDatePage() {\n    const [pet1, setPet1] = useState(\"\");\n    const [pet2, setPet2] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [activity, setActivity] = useState(\"\");\n    const [selectedDate, setSelectedDate] = useState(\"\");\n    const [playDates, setPlayDates] = useState(\"\");\n    const [showCalendar, setShowCalendar] = useState(false);\n\n    const { loading, data } = useQuery(QUERY_ME);\n    const me = data?.me || []; \n    console.log('me: ', me);\n\n    if (me.length === 0) {\n        return (\n        <Login />\n    )\n  }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //TODO: add logic or API cal to schedule play date\n        console.log(`Scheduled play date between ${pet1} and ${pet2} at ${location} for ${activity}`);\n        // setPlayDates([...playDates, newPlayDate]);\n    };\n\n    return (\n        <div className=\"page\">\n          <div className=\"playdate-form-card\">\n            <h2>Schedule a Play Date</h2>\n            <form onSubmit={handleSubmit}>\n              <h2>Pet 2</h2>\n              <input\n                type=\"text\"\n                value={pet2}\n                onChange={(e) => setPet2(e.target.value)}\n                placeholder=\"Enter pet name or username\"\n              />\n              <h2>Location</h2>\n              <input\n                type=\"text\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n                placeholder=\"Enter a location\"\n              />\n              <h2>Activity</h2>\n              <input \n                type=\"text\"\n                id=\"activity\"\n                value={activity}\n                onChange={(e) => setActivity(e.target.value)}\n                placeholder=\"Enter an activity for a play date\"\n              />\n              <h2>Date</h2>\n              <input \n                type=\"text\"\n                id=\"date\"\n                value={selectedDate ? selectedDate.toDateString() : ''}\n                onClick={() => setShowCalendar(true)}\n                // placeholder=\"Click to select a date\"\n              />\n              {showCalendar && \n                <MyCalendar \n                  value={new Date()}\n                  style={{\n                    width: \"500px\",\n                    height: \"500px\",\n                    margin: \"0 auto\",\n                    backgroundColor: \"#f2f2f2\",\n                    borderRadius: \"10px\"\n                  }}\n                  selectedDate={selectedDate}\n                  setSelectedDate={setSelectedDate}\n                  setShowCalendar={setShowCalendar}\n                />\n              }\n              <button type=\"submit\">Schedule Play Date</button>\n            </form>  \n          </div>\n          <div className=\"calendar-card\">\n            <MyCalendar playDates={playDates} />\n          </div>\n        </div>\n    );\n}\n\nexport default PlayDatePage;","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Cloudinary\\UploadWidget.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\Calendar.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Market\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Market\\MarketHome.js",["207","208","209","210"],"import { Link } from \"react-router-dom\";\r\nimport MarketBuy from \"../MarketBuy\";\r\nimport MarketSell from \"../MarketSell\";\r\n\r\nfunction MarketHome() {\r\n  const buyLink = <Link\r\n                to={`/marketplace/buy`}\r\n                style={{ textDecoration: 'none' }}>\r\n                <p className='light-text'>Buy</p>\r\n              </Link>\r\n  const sellLink = <Link\r\n                to={`/marketplace/sell`}\r\n                style={{ textDecoration: 'none' }}>\r\n                <p className='light-text'>Sell</p>\r\n              </Link>\r\n  return(\r\n    <div className=\"market-home page\">\r\n      <h1 className=\"market-home__greeting\">Welcome to the Marketplace</h1>\r\n      <div className=\"market-home__options\">\r\n        <Link to={`/marketplace/buy`} className=\"market-home__option market-home__option--buy\">\r\n          Buy\r\n        </Link>\r\n        <Link to={`/marketplace/sell`} className=\"market-home__option market-home__option--sell\">\r\n          Sell\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarketHome;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\MarketBuy\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\MarketSell\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\MarketBuy\\MarketBuy.js",["211","212","213","214","215"],"import { useQuery, useMutation } from \"@apollo/client\";\r\nimport Login from \"../../components/Login\";\r\n\r\nimport { QUERY_ITEMS_TO_BUY } from \"../../utils/queries\";\r\nimport { PURCHASE_ITEM } from \"../../utils/mutations\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\n\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\n\r\nimport Auth from \"../../utils/auth\";\r\n\r\nfunction MarketBuy() {\r\n  const { loadingItems, error, data } = useQuery(QUERY_ITEMS_TO_BUY, {\r\n    variables: {\r\n      ownerID: Auth.getUser().data._id,\r\n    },\r\n  });\r\n  const [PurchaseItem] = useMutation(PURCHASE_ITEM, {\r\n    refetchQueries: [{ query: QUERY_ITEMS_TO_BUY }, \"items_to_buy\"],\r\n  });\r\n  console.log(JSON.stringify(error, 2, null));\r\n  const items = data?.items_to_buy;\r\n\r\n  const handlePurchase = (e, itemID) => {\r\n    e.preventDefault();\r\n    PurchaseItem({\r\n      variables: {\r\n        itemID,\r\n      },\r\n      onCompleted: () => {\r\n        console.log(\"completed\");\r\n      },\r\n      onError: (error) => {\r\n        console.log(JSON.stringify(error, 2, null));\r\n      },\r\n    });\r\n  };\r\n  if (items == null || items.length === 0) {\r\n    return (\r\n      <div className=\"market-container page\">\r\n        {/* <h3 className=\"empty-message\">There's nothing to buy!</h3>\r\n        <p className=\"empty-message\">\r\n          Would you like to{\" \"}\r\n          <Link to={`/marketplace/sell`} className=\"sell-link\">\r\n            sell\r\n          </Link>{\" \"}\r\n          something?\r\n        </p> */}\r\n        <h3 className=\"empty-message\">Check out these pet accessories!</h3>\r\n        <div className=\"pet-accessories\">\r\n          <div className=\"pet-accessory\">\r\n            <h4 className=\"pet-accessory-title\">Pet Carrier</h4>\r\n            <button className=\"pet-accessory-purchase-button\">\r\n              Purchase\r\n            </button>\r\n            <p className=\"pet-accessory-price\">$50.00</p>\r\n            <img\r\n              src=\"https://m.media-amazon.com/images/I/81eLpE6l3NL.jpg\"\r\n              width={500}\r\n              alt=\"Pet Carrier\"\r\n            />\r\n            <p className=\"pet-accessory-description\">\r\n              Perfect for small dogs and cats.\r\n            </p>\r\n          </div>\r\n          <div className=\"pet-accessory\">\r\n            <h4 className=\"pet-accessory-title\">Pet Bed</h4>\r\n            <button className=\"pet-accessory-purchase-button\">\r\n              Purchase\r\n            </button>\r\n            <p className=\"pet-accessory-price\">$100.00</p>\r\n            <img\r\n              src=\"https://m.media-amazon.com/images/I/61gxx3o19RL.jpg\"\r\n              width={500}\r\n              alt=\"Pet Bed\"\r\n            />\r\n            <p className=\"pet-accessory-description\">\r\n              Cozy and comfortable for your furry friend.\r\n            </p>\r\n          </div>\r\n          <div className=\"pet-accessory\">\r\n            <h4 className=\"pet-accessory-title\">Pet Toys</h4>\r\n            <button className=\"pet-accessory-purchase-button\">\r\n              Purchase\r\n            </button>\r\n            <p className=\"pet-accessory-price\">$25.00</p>\r\n            <img\r\n              src=\"https://m.media-amazon.com/images/I/61F2H16SVrL._AC_.jpg\"\r\n              width={500}\r\n              alt=\"Pet Toys\"\r\n            />\r\n            <p className=\"pet-accessory-description\">\r\n              Keep your pet entertained with these fun toys.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {items.map((item) => {\r\n        let price = item?.itemPrice;\r\n        if (price != null && !price.includes(\".\")) {\r\n          price = \"$\" + price + \".00\";\r\n        }\r\n        return (\r\n          <div key={item._id}>\r\n            <h4>{item.itemTitle}</h4>\r\n            <button onClick={(e) => handlePurchase(e, item._id)}>\r\n              Purchase\r\n            </button>\r\n            <p>{price}</p>\r\n            {/* Render uploaded image from Cloudinary: */}\r\n            <img id=\"uploadedimage\" src={item.itemPhoto} width={500}></img>\r\n            {/* Render author's name: */}\r\n            <p>\r\n              {item.itemDescription}\r\n              <br />\r\n              <span className=\"username\">Sold by: {item.itemOwner.name}</span>\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarketBuy;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\MarketSell\\MarketSell.js",["216","217","218","219"],"import React, { useState } from \"react\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\n\r\nimport { QUERY_ITEMS_TO_SELL } from \"../../utils/queries\";\r\nimport { CREATE_ITEM_TO_SELL, REMOVE_ITEM } from \"../../utils/mutations\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\n\r\nimport CloudinaryUploadWidget from \"../../components/Cloudinary/UploadWidget\";\r\nimport Auth from \"../../utils/auth\";\r\n\r\nfunction MarketSell() {\r\n  const [itemImageURL, setItemImageURL] = useState(\"\");\r\n  const [itemTitle, setItemTitle] = useState(\"\");\r\n  const [itemDescription, setItemDescription] = useState(\"\");\r\n  const [itemPrice, setItemPrice] = useState(0.0);\r\n\r\n  const { loadingItems, data: itemData } = useQuery(QUERY_ITEMS_TO_SELL, {\r\n    variables: {\r\n      ownerID: Auth.getUser().data._id,\r\n    },\r\n  });\r\n\r\n  let items = itemData?.items_to_sell;\r\n\r\n  const [CreateItem] = useMutation(CREATE_ITEM_TO_SELL, {\r\n    refetchQueries: [{ query: QUERY_ITEMS_TO_SELL }, \"items_to_sell\"],\r\n  });\r\n  const [RemoveItem] = useMutation(REMOVE_ITEM, {\r\n    refetchQueries: [{ query: QUERY_ITEMS_TO_SELL }, \"items_to_sell\"],\r\n  });\r\n\r\n  const handleCreateItem = (e) => {\r\n    e.preventDefault();\r\n    CreateItem({\r\n      variables: {\r\n        owner: Auth.getUser().data._id,\r\n        title: itemTitle,\r\n        description: itemDescription,\r\n        price: itemPrice,\r\n        photo: itemImageURL,\r\n      },\r\n      onCompleted: () => {\r\n        console.log(\"completed\");\r\n      },\r\n      onError: (error) => {\r\n        console.log(JSON.stringify(error, 2, null));\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleRemove = (e, itemID) => {\r\n    e.preventDefault();\r\n    RemoveItem({\r\n      variables: {\r\n        itemID,\r\n      },\r\n      onCompleted: () => {\r\n        console.log(\"completed\");\r\n      },\r\n      onError: (error) => {\r\n        console.log(JSON.stringify(error, 2, null));\r\n      },\r\n    });\r\n  };\r\n\r\n  if (items == null) {\r\n    items = [];\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <form>\r\n        <input\r\n          name=\"itemTitle\"\r\n          placeholder=\"Enter item title\"\r\n          values={itemTitle}\r\n          onChange={(e) => setItemTitle(e.target.value)}\r\n          type=\"text\"\r\n        />\r\n        <textarea\r\n          name=\"itemDescription\"\r\n          placeholder=\"Enter item description\"\r\n          value={itemDescription}\r\n          onChange={(e) => setItemDescription(e.target.value)}\r\n        />\r\n        <input\r\n          name=\"itemPrice\"\r\n          placeholder=\"Enter price\"\r\n          values={itemPrice}\r\n          onChange={(e) => setItemPrice(e.target.value)}\r\n          type=\"number\"\r\n        />\r\n        <br />\r\n        <CloudinaryUploadWidget setPostImageURL={setItemImageURL} />\r\n        <br />\r\n        <button onClick={(e) => handleCreateItem(e)}>Submit</button>\r\n      </form>\r\n\r\n      <h4>Items You Are Selling</h4>\r\n      {items.map((item) => {\r\n        let price = item?.itemPrice;\r\n        if (price != null && !price.includes(\".\")) {\r\n          price = \"$\" + price + \".00\";\r\n        }\r\n        return (\r\n          <div key={item._id}>\r\n            <h4>{item.itemTitle}</h4>\r\n            <button onClick={(e) => handleRemove(e, item._id)}>Remove</button>\r\n            <p>{price}</p>\r\n            {/* Render uploaded image from Cloudinary: */}\r\n            <img id=\"uploadedimage\" src={item.itemPhoto} width={500}></img>\r\n            {/* Render author's name: */}\r\n            <p>\r\n              {item.itemDescription}\r\n              <br />\r\n              <span className=\"username\">STATUS: {item.itemStatus}</span>\r\n            </p>\r\n            <hr />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarketSell;",{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":23,"column":11,"nodeType":"226","messageId":"227","endLine":23,"endColumn":23},{"ruleId":"224","severity":1,"message":"228","line":26,"column":11,"nodeType":"226","messageId":"227","endLine":26,"endColumn":18},{"ruleId":"224","severity":1,"message":"229","line":23,"column":27,"nodeType":"226","messageId":"227","endLine":23,"endColumn":31},{"ruleId":"224","severity":1,"message":"228","line":31,"column":11,"nodeType":"226","messageId":"227","endLine":31,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":41,"column":1,"nodeType":"232","endLine":41,"endColumn":34},{"ruleId":"224","severity":1,"message":"233","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":16,"column":9,"nodeType":"236","endLine":16,"endColumn":74},{"ruleId":"224","severity":1,"message":"237","line":21,"column":24,"nodeType":"226","messageId":"227","endLine":21,"endColumn":29},{"ruleId":"224","severity":1,"message":"229","line":21,"column":31,"nodeType":"226","messageId":"227","endLine":21,"endColumn":35},{"ruleId":"224","severity":1,"message":"228","line":38,"column":11,"nodeType":"226","messageId":"227","endLine":38,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":90,"column":13,"nodeType":"236","endLine":93,"endColumn":14},{"ruleId":"224","severity":1,"message":"229","line":16,"column":29,"nodeType":"226","messageId":"227","endLine":16,"endColumn":33},{"ruleId":"224","severity":1,"message":"228","line":9,"column":13,"nodeType":"226","messageId":"227","endLine":9,"endColumn":20},{"ruleId":"224","severity":1,"message":"229","line":16,"column":26,"nodeType":"226","messageId":"227","endLine":16,"endColumn":30},{"ruleId":"224","severity":1,"message":"238","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":21},{"ruleId":"224","severity":1,"message":"228","line":14,"column":11,"nodeType":"226","messageId":"227","endLine":14,"endColumn":18},{"ruleId":"224","severity":1,"message":"228","line":7,"column":13,"nodeType":"226","messageId":"227","endLine":7,"endColumn":20},{"ruleId":"224","severity":1,"message":"228","line":33,"column":11,"nodeType":"226","messageId":"227","endLine":33,"endColumn":18},{"ruleId":"224","severity":1,"message":"229","line":52,"column":15,"nodeType":"226","messageId":"227","endLine":52,"endColumn":19},{"ruleId":"224","severity":1,"message":"239","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"240","line":4,"column":10,"nodeType":"226","messageId":"227","endLine":4,"endColumn":20},{"ruleId":"224","severity":1,"message":"228","line":51,"column":11,"nodeType":"226","messageId":"227","endLine":51,"endColumn":18},{"ruleId":"224","severity":1,"message":"241","line":9,"column":18,"nodeType":"226","messageId":"227","endLine":9,"endColumn":25},{"ruleId":"224","severity":1,"message":"242","line":14,"column":23,"nodeType":"226","messageId":"227","endLine":14,"endColumn":35},{"ruleId":"224","severity":1,"message":"228","line":17,"column":13,"nodeType":"226","messageId":"227","endLine":17,"endColumn":20},{"ruleId":"224","severity":1,"message":"243","line":2,"column":8,"nodeType":"226","messageId":"227","endLine":2,"endColumn":17},{"ruleId":"224","severity":1,"message":"244","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":18},{"ruleId":"224","severity":1,"message":"245","line":6,"column":9,"nodeType":"226","messageId":"227","endLine":6,"endColumn":16},{"ruleId":"224","severity":1,"message":"246","line":11,"column":9,"nodeType":"226","messageId":"227","endLine":11,"endColumn":17},{"ruleId":"224","severity":1,"message":"247","line":2,"column":8,"nodeType":"226","messageId":"227","endLine":2,"endColumn":13},{"ruleId":"224","severity":1,"message":"233","line":7,"column":10,"nodeType":"226","messageId":"227","endLine":7,"endColumn":14},{"ruleId":"224","severity":1,"message":"248","line":11,"column":8,"nodeType":"226","messageId":"227","endLine":11,"endColumn":16},{"ruleId":"224","severity":1,"message":"249","line":16,"column":11,"nodeType":"226","messageId":"227","endLine":16,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":120,"column":13,"nodeType":"236","endLine":120,"endColumn":70},{"ruleId":"224","severity":1,"message":"233","line":7,"column":10,"nodeType":"226","messageId":"227","endLine":7,"endColumn":14},{"ruleId":"224","severity":1,"message":"248","line":9,"column":8,"nodeType":"226","messageId":"227","endLine":9,"endColumn":16},{"ruleId":"224","severity":1,"message":"249","line":20,"column":11,"nodeType":"226","messageId":"227","endLine":20,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":114,"column":13,"nodeType":"236","endLine":114,"endColumn":70},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'loadingPosts' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'error' is assigned a value but never used.","'QUERY_POSTS' is defined but never used.","'QUERY_PET' is defined but never used.","'QUERY_USER' is defined but never used.","'setPet1' is assigned a value but never used.","'setPlayDates' is assigned a value but never used.","'MarketBuy' is defined but never used.","'MarketSell' is defined but never used.","'buyLink' is assigned a value but never used.","'sellLink' is assigned a value but never used.","'Login' is defined but never used.","'PostCard' is defined but never used.","'loadingItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]