[{"F:\\bootcamp\\meet-n-treats\\client\\src\\index.js":"1","F:\\bootcamp\\meet-n-treats\\client\\src\\App.js":"2","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\MainApp\\MainApp.js":"3","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\queries.js":"4","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\SinglePost\\SinglePost.js":"5","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\AddPetForm\\AddPetForm.js":"6","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\index.js":"7","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\index.js":"8","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\index.js":"9","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\index.js":"10","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\index.js":"11","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\index.js":"12","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\index.js":"13","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\index.js":"14","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\index.js":"15","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\index.js":"16","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\auth.js":"17","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\PostCard\\PostCard.js":"18","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\mutations.js":"19","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\CommentList\\CommentList.js":"20","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\CommentForm\\CommentForm.js":"21","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\Register.js":"22","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\Create.js":"23","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\Search.js":"24","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\Profile.js":"25","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\Explore.js":"26","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\PlayDate.js":"27","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\Nav.js":"28","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\Login.js":"29","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\Home.js":"30","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\Sidebar.js":"31","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Cloudinary\\UploadWidget.js":"32","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\index.js":"33","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\Calendar.js":"34"},{"size":219,"mtime":1675628578822,"results":"35","hashOfConfig":"36"},{"size":727,"mtime":1675666327395,"results":"37","hashOfConfig":"36"},{"size":1807,"mtime":1675666496245,"results":"38","hashOfConfig":"36"},{"size":1512,"mtime":1675665857709,"results":"39","hashOfConfig":"36"},{"size":1446,"mtime":1675665955113,"results":"40","hashOfConfig":"36"},{"size":3644,"mtime":1675665857707,"results":"41","hashOfConfig":"36"},{"size":41,"mtime":1675628578821,"results":"42","hashOfConfig":"36"},{"size":38,"mtime":1675628578817,"results":"43","hashOfConfig":"36"},{"size":37,"mtime":1675628578824,"results":"44","hashOfConfig":"36"},{"size":38,"mtime":1675628578823,"results":"45","hashOfConfig":"36"},{"size":38,"mtime":1675628578826,"results":"46","hashOfConfig":"36"},{"size":40,"mtime":1675628578823,"results":"47","hashOfConfig":"36"},{"size":39,"mtime":1675628578825,"results":"48","hashOfConfig":"36"},{"size":40,"mtime":1675628578825,"results":"49","hashOfConfig":"36"},{"size":39,"mtime":1675628578821,"results":"50","hashOfConfig":"36"},{"size":35,"mtime":1675628578818,"results":"51","hashOfConfig":"36"},{"size":1012,"mtime":1675628578828,"results":"52","hashOfConfig":"36"},{"size":896,"mtime":1675628600555,"results":"53","hashOfConfig":"36"},{"size":2169,"mtime":1675665857709,"results":"54","hashOfConfig":"36"},{"size":540,"mtime":1675665857704,"results":"55","hashOfConfig":"36"},{"size":2094,"mtime":1675665857703,"results":"56","hashOfConfig":"36"},{"size":1824,"mtime":1675669075733,"results":"57","hashOfConfig":"36"},{"size":2694,"mtime":1675665556885,"results":"58","hashOfConfig":"36"},{"size":1209,"mtime":1675665556909,"results":"59","hashOfConfig":"36"},{"size":1285,"mtime":1675665556904,"results":"60","hashOfConfig":"36"},{"size":2025,"mtime":1675665556889,"results":"61","hashOfConfig":"36"},{"size":4083,"mtime":1675669460354,"results":"62","hashOfConfig":"36"},{"size":1863,"mtime":1675628600555,"results":"63","hashOfConfig":"36"},{"size":2279,"mtime":1675665857705,"results":"64","hashOfConfig":"36"},{"size":1205,"mtime":1675666011387,"results":"65","hashOfConfig":"36"},{"size":519,"mtime":1675665857706,"results":"66","hashOfConfig":"36"},{"size":970,"mtime":1675628578815,"results":"67","hashOfConfig":"36"},{"size":40,"mtime":1675628578815,"results":"68","hashOfConfig":"36"},{"size":1433,"mtime":1675628578815,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"y7t9dj",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"F:\\bootcamp\\meet-n-treats\\client\\src\\index.js",[],["152","153"],"F:\\bootcamp\\meet-n-treats\\client\\src\\App.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\MainApp\\MainApp.js",["154"],"import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\n\nimport Home from \"../../pages/Home\";\nimport AddPetForm from \"../../pages/AddPetForm/AddPetForm\";\nimport Create from \"../../pages/Create\";\nimport PlayDate from \"../../pages/PlayDate\";\nimport Profile from \"../../pages/Profile\";\nimport Search from \"../../pages/Search\";\nimport Explore from \"../../pages/Explore\";\nimport SinglePost from \"../../pages/SinglePost/SinglePost\";\n\nimport Login from \"../Login\";\nimport Register from \"../Register\";\nimport Sidebar from \"../Sidebar\";\nimport Nav from \"../Nav\";\n\nexport default function MainApp() {\n  const { loadingPosts, data: postsData } = useQuery(QUERY_POSTS);\n  // NOTE: must be a key-value pair of data: ...\n  console.log('>>> logging postsData: ', postsData);\n  // console.log(postsData.posts.)\n\n  // Get posts from query:\n  var posts = postsData ? postsData.posts : [];\n  console.log('posts: ', posts);\n  \n  return (\n    <Router>\n      <div className=\"main\">\n        <Sidebar>\n          <Nav></Nav>\n        </Sidebar>\n        <Routes>\n          <Route path=\"/\" element={<Home posts={posts}/>} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/add-pet\" element={<AddPetForm />} />\n          <Route path=\"/create\" element={<Create />} />\n          <Route path=\"/explore\" element={<Explore />} />\n          <Route path=\"/playdates\" element={<PlayDate />} />\n          <Route path=\"/profiles\" element={<Profile />} />\n          <Route path=\"/search\" element={<Search />} />\n          <Route path=\"/posts/:postId\" element={<SinglePost posts={posts} />} />\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\queries.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\SinglePost\\SinglePost.js",["155","156","157"],"import { useQuery } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\";\n\nimport CommentList from \"../../components/CommentList/CommentList\";\n// TODO: import CommentForm here when it's made\nimport CommentForm from \"../../components/CommentForm/CommentForm\";\n\nimport Login from \"../../components/Login\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport { QUERY_SINGLE_POST } from \"../../utils/queries\";\n\nimport PostCard from \"../../components/PostCard/PostCard\";\n\nexport default function SinglePost(props) {\n  console.log('Starting SinglePost()...');\n\n  // Retrieve postId from the route:\n  const { postId } = useParams();\n  \n  const { posts } = props;\n  console.log('logging posts: ', posts);\n\n  const post = posts.find(post => post._id === postId);\n  console.log('>>> logging post: ', post);\n\n  // Redirect to log in page if not logged in:\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; \n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  // if (loadingPost) {\n  //   return <div>Loading...</div>;\n  // }\n  \n  return (\n    <div className=\"flex-column align-center page\">\n      <h2>💭 Join the Discussion 💭</h2>\n      <div className='app-postcard_page my-5 px-6 py-5'>\n        <PostCard postsData={post} />\n        <div className=\"\">\n          <CommentForm postId={postId} />\n        </div>\n      </div>\n      {/* TODO: Add CommentList & CommentForm */}\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\AddPetForm\\AddPetForm.js",["158","159"],"import { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_PET } from \"../../utils/mutations\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nimport Auth from '../../utils/auth';\n\nexport default function AddPetForm() {\n  const [formState, setFormState] = useState({\n    petOwner: Auth.getUser().data._id,\n    petName: \"\",\n    petAge: \"\",\n    petType: \"\",\n    petBreed: \"\",\n    petFavFood: \"\",\n    petFavActivities: \"\",\n    petBio: \"\",\n  });\n\n  const [addPet, { error, data }] = useMutation(ADD_PET);\n  \n  const handleInputChange = ({ target: { name, value } }) => {\n    console.log(name, value);\n    setFormState({ ...formState, [name]: value });\n  };\n\n  // Authenticate user:\n  const { loading, data: meData } = useQuery(QUERY_ME);\n  const me = meData?.me || []; \n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addPet({\n        variables: { ...formState }\n      });\n      console.log(data);\n      setFormState('');\n      window.location.replace('/profiles');\n\n    } catch (error) {\n      console.error('>>> handleSubmit error: ', error);\n    }\n  };\n\n  return (\n    <div className=\"pet-form-card flex-column align-center page\">\n      <h2 className=\"text-center\">🐾 Add Your Pet 🐾</h2>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's name*\"\n          name=\"petName\"\n          value={formState.petName}\n          onChange={handleInputChange}\n        />\n        <label>\n          <h6>Select type of animal for your pet*:</h6>\n          <select name=\"petType\" value={formState.petType} onChange={handleInputChange}>\n            <option value=\"default\">Select</option>\n            <option value=\"dog\">🐶 Doggo</option>\n            <option value=\"cat\">🐱 Catto</option>\n            <option value=\"rabbit\">🐰 Bunny</option>\n            <option value=\"hamster\">🐹 Hamster/Guinea Pig/Mouse/Chinchilla</option>\n            <option value=\"bird\">🐦 Birdy</option>\n            <option value=\"reptile\">🐢 Reptile Fam</option>\n            <option value=\"aquatic\">🐠 Aquatics</option>\n            <option value=\"other\">Other</option>\n          </select>\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's age (optional)\"\n          name=\"petAge\"\n          value={formState.petAge}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's breed (optional)\"\n          name=\"petBreed\"\n          value={formState.petBreed}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's favorite food (optional)\"\n          name=\"petFavFood\"\n          value={formState.petFavFood}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Your pet's favorite activities (optional)\"\n          name=\"petFavActivities\"\n          value={formState.petFavActivities}\n          onChange={handleInputChange}\n        />\n        <textarea\n          placeholder=\"Type a short bio for your pet here... (optional)\"\n          name=\"petBio\"\n          value={formState.petBio}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\" className=\"btn btn-info\">Submit</button>\n      </form>\n      {error && (\n        <div className=\"text-danger\">\n          Invalid input\n        </div>\n      )}\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\auth.js",["160"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getUser() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n  // This function checks if local storage has the \"auth_token\"\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\PostCard\\PostCard.js",["161","162"],"import { Link } from 'react-router-dom';\n\nexport default function PostCard(props) {\n  const { postsData } = props;\n  return (\n    // FRONT-END TODO: Add styling to the div below to look like an Instagram post\n    <div>\n      <div className='app-postcard_data-author'>\n        <div className='app-postcard_data-author-avatar'>\n          <img src={'https://res.cloudinary.com/dnwrm14k9/image/upload/v1675571532/avatar_if5map.png'} alt='avatar' />\n        </div>\n        <h4>{postsData.postAuthor.name}</h4>\n      </div>\n      <p>{postsData.createdAt}</p>\n      {/* Render uploaded image from Cloudinary: */}\n      <div className='app-postcard_data-image'>\n        <img id=\"uploadedimage\" src={postsData.postImageURL} width={500}></img>\n      </div>\n      {/* Render author's name: */}\n      <p><span className='username'>{postsData.postAuthor.name}</span> {postsData.postText}</p>\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\utils\\mutations.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\CommentList\\CommentList.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\CommentForm\\CommentForm.js",["163","164","165","166"],"import { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_COMMENT } from \"../../utils/mutations\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nimport Auth from '../../utils/auth';\n\nexport default function CommentForm(props) {\n  const { postId } = props;\n\n  const [formState, setFormState] = useState({\n    postId: postId,\n    commentAuthor: Auth.getUser().data._id,\n    commentText: \"\",\n  });\n\n  const [addComment, { error, data }] = useMutation(ADD_COMMENT);\n\n  // Authenticate user:\n  const { loading, data: meData } = useQuery(QUERY_ME);\n  const me = meData?.me || []; \n  // console.log('me: ', me);\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  };\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    console.log(name, value);\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addComment({\n        variables: { ...formState }\n      });\n      console.log(data);\n      setFormState('');\n\n    } catch (error) {\n      console.error('>>> handleSubmit error: ', error);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit} className=\"display-inline\">\n        <div className=\"display-inline\">\n          <input\n            type=\"text\"\n            placeholder=\"Add a comment...\"\n            name=\"commentText\"\n            value={formState.commentText}\n            onChange={handleInputChange}\n            style={{ border: 'none' }}\n            className=\"negative-margin no-border text-lg\"\n          />\n        </div>\n        <div className=\"display-inline\">\n          <button \n            type=\"submit\" \n            className=\"btn btn-xsm btn-comment\"\n          >\n            <img \n              src=\"https://res.cloudinary.com/dnwrm14k9/image/upload/v1675658604/send-4008_kgqwyo.png\" \n              width=\"20px\"\n            ></img>\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Register\\Register.js",["167"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register() {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  // const [registerError, setRegisterError] = useState('');\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.register.token);\n    } catch (error) {\n      // setRegisterError(error);\n      console.error(error);\n    }\n  };\n  return (\n    <div className=\"signup-form-card flex-column align-center\">\n      <h2>Sign Up</h2>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Your username*\"\n          name=\"name\"\n          value={formState.name}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Your email*\"\n          name=\"email\"\n          value={formState.email}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"******\"\n          name=\"password\"\n          value={formState.password}\n          onChange={handleInputChange}\n        />        \n        <button type=\"submit\" className=\"btn btn-info signup-btn\">Sign up</button>\n      </form>\n      {error && (\n        <div className=\"text-danger\">\n          Invalid credentials\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Register;\n","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Create\\Create.js",["168","169"],"import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nimport { QUERY_POSTS } from \"../../utils/queries\";\nimport { ADD_POST } from \"../../utils/mutations\";\nimport CloudinaryUploadWidget from \"../../components/Cloudinary/UploadWidget\"; \n\nimport Auth from '../../utils/auth';\n\nfunction CreatePostPage() {\n  const [postText, setPostText] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n  const [postImageURL, setPostImageURL] = useState(\"\");\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      // NOTE: Must QUERY_POSTS somewhere else before reading the cache.\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n        console.log('posts: ', posts);\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  });\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; \n  // console.log('me: ', me);\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  // const handleImageChange = (e) => {\n  //   setPostImage(e.target.files[0]);\n  // };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      console.log('postImageURL: ', postImageURL);\n      const { data } = await addPost({\n        variables: {\n          postText,\n          postImageURL,\n          postAuthor: Auth.getUser().data._id,\n        },\n      });\n      \n      setPostText('');\n      window.location.replace('/');\n    } catch (error) {\n      console.error('>>> handleSubmit error: ', error);\n    }\n    setPostText(\"\");\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'postText' && value.length <= 280) {\n      setPostText(value);\n      setCharacterCount(value.length);\n    }\n  }\n\n  return (\n    <div className=\"page\">\n      <h2>📝 Create a Post</h2>\n      <p\n        className={`m-0 ${\n          characterCount === 280 || error ? 'text-danger' : ''\n        }`}\n      >\n        Character Count: {characterCount}/280\n      </p>\n      <form onSubmit={handleSubmit}>\n        <CloudinaryUploadWidget setPostImageURL={setPostImageURL} />\n        <br />\n        <textarea\n          name=\"postText\"\n          placeholder=\"Enter post text\"\n          value={postText}\n          onChange={handleInputChange}\n        />\n        <br />\n        <button type=\"submit\">Post</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePostPage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Search\\Search.js",["170"],"import React, {useState} from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nfunction SearchPage() {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const { loading, data } = useQuery(QUERY_ME);\n    const me = data?.me || []; \n    console.log('me: ', me);\n  \n    if (me.length === 0) {\n      return (\n        <Login />\n      )\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // TODO: Make API call to search for pets or users with the search term\n    };\n\n    return (\n        <div className=\"page\">\n            <h1>Search</h1>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Search by pet name or username\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            <h2>Results</h2>\n            <ul>\n                {/* TODO: Add display search results */}\n            </ul>\n        </div>\n    );\n}\n\nexport default SearchPage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Profile\\Profile.js",["171"],"import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nfunction ProfilePage({ currentUser, currentUserPet, posts, updatePetName }) {\n  const [petName, setPetName] = useState(currentUserPet);\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; \n  console.log('me: ', me);\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  const handleUpdatePetName = (e) => {\n    e.preventDefault();\n    updatePetName(petName);\n    console.log(`Pet name updated to: ${petName}`);\n  };\n\n  return (\n    <div className=\"page\">\n      {/* <h1>{currentUser}'s Profile</h1> */}\n      {/* <h2>Pet: {currentUserPet}</h2> */}\n      <form onSubmit={handleUpdatePetName}>\n        <label>\n          Change Pet Name:\n          <input\n            type=\"text\"\n            value={petName}\n            onChange={(e) => setPetName(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Update</button>\n      </form>\n      <h2>Posts</h2>\n      {/* {posts.map((post) => (\n        <div key={post.id}>\n          <p>{post.content}</p>\n          <p>{post.date}</p>\n        </div>\n      ))} */}\n    </div>\n  );\n}\n\nexport default ProfilePage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Explore\\Explore.js",["172"],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Login from \"../../components/Login\";\n\nfunction ExplorePage() {\n    const { loading, data } = useQuery(QUERY_ME);\n    const me = data?.me || []; \n    console.log('me: ', me);\n\n    if (me.length === 0) {\n         return (\n        <Login />\n    )\n    }\n\n    return(\n        <div className=\"page\">\n            \n            <h1>Explore</h1>\n            <p>Discover new pets and stay updated on your favorites</p>\n            <h2>Popular Pets</h2>\n            <ul>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 1\" />\n                    <h3>Pet 1</h3>\n                    <p>Pet 1's bio</p>\n                </li>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 2\" />\n                    <h3>Pet 2</h3>\n                    <p>Pet 2's bio</p>\n                </li>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 3\" />\n                    <h3>Pet 3</h3>\n                    <p>Pet 3's bio</p>\n                </li>\n            </ul>\n            <button>See More Popular Pets</button>\n            <h2>Recommend Pets</h2>\n            <ul>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 4\" />\n                    <h3>Pet 4</h3>\n                    <p>Pet 4's bio</p>\n                </li>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 5\" />\n                    <h3>Pet 5</h3>\n                    <p>Pet 5's bio</p>\n                </li>\n                <li>\n                    <img src=\"https://via.placeholder.com/150x150\" alt=\"Pet 6\" />\n                    <h3>Pet 6</h3>\n                    <p>Pet 6's bio</p>\n                </li>\n            </ul>\n            <button>See More Recommended Pets</button>\n        </div>\n    );\n}\n\nexport default ExplorePage;","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\PlayDate\\PlayDate.js",["173","174","175","176","177"],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Nav\\Nav.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Login\\Login.js",["178"],"import { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport { Link } from 'react-router-dom';\n\nimport Auth from \"../../utils/auth.js\";\nimport image from '../../assets/background.png';\n\n\nfunction Login() {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (     \n      <div className=\"app-login_page\">\n            <hr className=\"lin\"></hr>\n            <div className=\"app-login_page__container\" style={{backgroundImage: `url(${image})`,\n              backgroundSize: \"cover\",\n              backgroundRepeat: \"no-repeat\",\n              height: \"70vh\",\n              width: \"98vw\",\n              opacity: \"0.9\",\n            }}> \n              <h1>Log In</h1>\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  type=\"email\"\n                  placeholder=\"Your Email\"\n                  name=\"email\"\n                  value={formState.email}\n                  onChange={handleInputChange}\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"********\"\n                  name=\"password\"\n                  value={formState.password}\n                  onChange={handleInputChange}\n                />\n                <button className=\"btn btn-block btn-primary text-dark login\" type=\"submit\">Login</button>\n              </form>\n              <h4>\n                Don't have an account? \n                <Link className=\"text-link no-underline\" to=\"/register\"> Sign up</Link>\n              </h4>\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n\n\n        </div>\n  );\n}\n\nexport default Login;\n","F:\\bootcamp\\meet-n-treats\\client\\src\\pages\\Home\\Home.js",["179","180"],"import { useQuery } from \"@apollo/client\";\nimport Login from \"../../components/Login\";\n\nimport { QUERY_ME } from \"../../utils/queries\";\nimport { QUERY_POSTS } from \"../../utils/queries\";\n\nimport { Link } from \"react-router-dom\";\n\nimport PostCard from \"../../components/PostCard/PostCard\";\n\nfunction Home(props) {\n  const { posts } = props;\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const me = data?.me || []; // *QUESTION: Why set to empty array instead of empty object? To avoid null or undefined references\n\n  if (me.length === 0) {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <div className=\"flex-column align-center page\">\n      {posts && \n        posts.map((post) => (\n          <div key={post._id} className='app-postcard_page my-5 px-6 py-5'>\n            <PostCard \n              postsData={post}\n            />\n            <Link className='' to={`/posts/${post._id}`} style={{ textDecoration: 'none' }}>\n              <p className='light-text'>View post and leave comments</p>\n            </Link>\n          </div>\n      ) || (\n        <div>\n          <h2>No posts yet. Add your own post with \"📝 Create\"!</h2>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n","F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Sidebar\\Sidebar.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Cloudinary\\UploadWidget.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\index.js",[],"F:\\bootcamp\\meet-n-treats\\client\\src\\components\\Calendar\\Calendar.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":20,"column":11,"nodeType":"187","messageId":"188","endLine":20,"endColumn":23},{"ruleId":"185","severity":1,"message":"189","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"190","line":11,"column":10,"nodeType":"187","messageId":"188","endLine":11,"endColumn":27},{"ruleId":"185","severity":1,"message":"191","line":28,"column":11,"nodeType":"187","messageId":"188","endLine":28,"endColumn":18},{"ruleId":"185","severity":1,"message":"192","line":23,"column":27,"nodeType":"187","messageId":"188","endLine":23,"endColumn":31},{"ruleId":"185","severity":1,"message":"191","line":31,"column":11,"nodeType":"187","messageId":"188","endLine":31,"endColumn":18},{"ruleId":"193","severity":1,"message":"194","line":41,"column":1,"nodeType":"195","endLine":41,"endColumn":34},{"ruleId":"185","severity":1,"message":"196","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":17,"column":9,"nodeType":"199","endLine":17,"endColumn":74},{"ruleId":"185","severity":1,"message":"200","line":20,"column":24,"nodeType":"187","messageId":"188","endLine":20,"endColumn":29},{"ruleId":"185","severity":1,"message":"192","line":20,"column":31,"nodeType":"187","messageId":"188","endLine":20,"endColumn":35},{"ruleId":"185","severity":1,"message":"191","line":23,"column":11,"nodeType":"187","messageId":"188","endLine":23,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":71,"column":13,"nodeType":"199","endLine":74,"endColumn":14},{"ruleId":"185","severity":1,"message":"192","line":16,"column":29,"nodeType":"187","messageId":"188","endLine":16,"endColumn":33},{"ruleId":"185","severity":1,"message":"191","line":33,"column":11,"nodeType":"187","messageId":"188","endLine":33,"endColumn":18},{"ruleId":"185","severity":1,"message":"192","line":52,"column":15,"nodeType":"187","messageId":"188","endLine":52,"endColumn":19},{"ruleId":"185","severity":1,"message":"191","line":9,"column":13,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},{"ruleId":"185","severity":1,"message":"191","line":9,"column":11,"nodeType":"187","messageId":"188","endLine":9,"endColumn":18},{"ruleId":"185","severity":1,"message":"191","line":7,"column":13,"nodeType":"187","messageId":"188","endLine":7,"endColumn":20},{"ruleId":"185","severity":1,"message":"201","line":11,"column":12,"nodeType":"187","messageId":"188","endLine":11,"endColumn":16},{"ruleId":"185","severity":1,"message":"202","line":11,"column":18,"nodeType":"187","messageId":"188","endLine":11,"endColumn":25},{"ruleId":"185","severity":1,"message":"203","line":16,"column":23,"nodeType":"187","messageId":"188","endLine":16,"endColumn":35},{"ruleId":"185","severity":1,"message":"191","line":19,"column":13,"nodeType":"187","messageId":"188","endLine":19,"endColumn":20},{"ruleId":"185","severity":1,"message":"200","line":23,"column":49,"nodeType":"187","messageId":"188","endLine":23,"endColumn":54},{"ruleId":"185","severity":1,"message":"192","line":16,"column":26,"nodeType":"187","messageId":"188","endLine":16,"endColumn":30},{"ruleId":"185","severity":1,"message":"204","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":21},{"ruleId":"185","severity":1,"message":"191","line":14,"column":11,"nodeType":"187","messageId":"188","endLine":14,"endColumn":18},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'loadingPosts' is assigned a value but never used.","Identifier","unusedVar","'CommentList' is defined but never used.","'QUERY_SINGLE_POST' is defined but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'error' is assigned a value but never used.","'pet1' is assigned a value but never used.","'setPet1' is assigned a value but never used.","'setPlayDates' is assigned a value but never used.","'QUERY_POSTS' is defined but never used.","no-global-assign","no-unsafe-negation"]